name: Deploy to AWS EC2

on:
  push:
    branches: [main]

jobs:
  deploy:
    name: Deploy to AWS EC2
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Pull latest changes
        run: |
          git pull origin main

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1 # Replace with your desired AWS region

      - name: Import EC2 SSH Key
        env:
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
        run: |
          echo "$EC2_SSH_KEY" > ec2_ssh_key.pem
          chmod 600 ec2_ssh_key.pem

      - name: Deploy to EC2
        env:
          EC2_INSTANCE_ID: i-0c0091cb741e9f87b # Replace with your EC2 instance ID
          SSH_USER: ubuntu # Replace with your EC2 instance SSH user
        run: |
          # Install dependencies
          sudo apt-get update
          sudo apt-get install -y \
            apt-transport-https \
            ca-certificates \
            curl \
            software-properties-common

          # Install Docker
          curl -fsSL https://get.docker.com -o get-docker.sh
          sudo sh get-docker.sh

          # Clear GO chache
          ssh -i ec2_ssh_key.pem -o StrictHostKeyChecking=no $SSH_USER@100.25.126.145 'sudo rm -rf /root/.cache/go-build/*'

          # Build and deploy Docker image
          docker build -t my-app ./backend
          docker save my-app | bzip2 | ssh -i ec2_ssh_key.pem -o StrictHostKeyChecking=no $SSH_USER@$(aws ec2 describe-instances --instance-id $EC2_INSTANCE_ID --query 'Reservations[0].Instances[0].PublicIpAddress' --output text) 'docker load && docker-compose up -d my-app'
