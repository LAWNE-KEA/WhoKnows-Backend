name: Deploy to AWS EC2

on:
  push:
    branches: [main]

jobs:
  deploy:
    name: Deploy to AWS EC2
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Pull latest changes
      run: |
        git pull origin main

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1 # Replace with your desired AWS region

    - name: Import EC2 SSH Key
      env:
        EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
      run: |
        echo "$EC2_SSH_KEY" > ec2_ssh_key.pem
        chmod 600 ec2_ssh_key.pem

    - name: Deploy to EC2
      env:
        EC2_INSTANCE_ID: i-0c0091cb741e9f87b # Replace with your EC2 instance ID
        SSH_USER: ubuntu # Replace with your EC2 instance SSH user
      run: |
        # Deploy using Docker Compose
        scp -i ec2_ssh_key.pem -o StrictHostKeyChecking=no compose.yml $SSH_USER@$(aws ec2 describe-instances --instance-id $EC2_INSTANCE_ID --query 'Reservations[0].Instances[0].PublicIpAddress' --output text):/home/$SSH_USER/
        ssh -i ec2_ssh_key.pem -o StrictHostKeyChecking=no $SSH_USER@$(aws ec2 describe-instances --instance-id $EC2_INSTANCE_ID --query 'Reservations[0].Instances[0].PublicIpAddress' --output text) 'docker-compose down && docker-compose up'
