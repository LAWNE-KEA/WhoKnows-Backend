volumes:
  postgres_data:
  certbot-etc:
  certbot-var:

networks:
  WhoKnows-LAWNE:
    driver: bridge

services:
  nginx:
    container_name: nginx
    image: nginx:alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - /etc/letsencrypt:/etc/letsencrypt
    depends_on:
      - backend
    networks:
      - WhoKnows-LAWNE

  certbot:
    container_name: certbot
    image: certbot/certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - WhoKnows-LAWNE

  backend:
    container_name: whoknows
    image: ghcr.io/lawne-kea/whoknows:latest
    restart: always
    environment:
      - ENV_DATABASE_USER=${ENV_DATABASE_USER}
      - ENV_DATABASE_PASSWORD=${ENV_DATABASE_PASSWORD}
      - ENV_DATABASE_PORT=5432
      - ENV_DATABASE_NAME=${ENV_DATABASE_NAME}
      - ENV_DATABASE_MIGRATE=${ENV_DATABASE_MIGRATE}
      - ENV_DATABASE_HOST=db
      - ENV_DATABASE_SSLMODE=${ENV_DATABASE_SSLMODE}
      - ENV_DATABASE_SEED=${ENV_DATABASE_SEED}
      - ENV_FILE_PATH=
      - ENV_JWT_SECRET=${ENV_JWT_SECRET}
      - ENV_JWT_EXPIRY=${ENV_JWT_EXPIRY}
      - ENV_WEATHER_API_KEY=${ENV_WEATHER_API_KEY}
    ports:
      - "8080:8080"
    volumes:
      - ./src:/app:delegated
      - ./src/pages:/pages
      - ./src/static:/static
    networks:
      - WhoKnows-LAWNE
    depends_on:
      - db

  db:
    container_name: db
    image: postgres:15-alpine
    restart: always
    environment:
      - POSTGRES_DB=${ENV_DATABASE_NAME}
      - POSTGRES_USER=${ENV_DATABASE_USER}
      - POSTGRES_PASSWORD=${ENV_DATABASE_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - WhoKnows-LAWNE
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${ENV_DATABASE_USER} -d ${ENV_DATABASE_NAME}"]
      interval: 10s
      timeout: 5s

  postgres-exporter:
    container_name: postgres-exporter
    image: wrouesnel/postgres_exporter:latest
    restart: always
    environment:
      - DATA_SOURCE_NAME=postgresql://${ENV_DATABASE_USER}:${ENV_DATABASE_PASSWORD}@db:5432/${ENV_DATABASE_NAME}?sslmode=${ENV_DATABASE_SSLMODE}
    ports:
      - "9187:9187"
    networks:
      - WhoKnows-LAWNE
    depends_on:
      - db

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    restart: always
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - WhoKnows-LAWNE