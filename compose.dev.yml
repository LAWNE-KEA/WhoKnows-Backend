volumes:
  postgres_data:

networks:
  WhoKnows-LAWNE:
    driver: bridge

services:
  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    # environment:
    #   - API_DATABASE_HOST=${API_DATABASE_HOST}
    #   - API_DATABASE_PORT=${API_DATABASE_PORT}
    #   - API_DATABASE_USER=${API_DATABASE_USER}
    #   - API_DATABASE_PASSWORD=${API_DATABASE_PASSWORD}
    #   - API_DATABASE_NAME=${API_DATABASE_NAME}
    #   - API_DATABASE_SSL_MODE=${API_DATABASE_SSL_MODE}
    #   - API_DATABASE_MIGRATE=${API_DATABASE_MIGRATE}
    #   - API_JWT_SECRET=${API_JWT_SECRET}
    #   - API_JWT_EXPIRATION=${API_JWT_EXPIRATION}
    #   - API_WEATHER_API_KEY=${API_WEATHER_API_KEY}
    ports:
      - "8080:8080"
    volumes:
      - ./backend:/app:delegated
    networks:
      - WhoKnows-LAWNE
    depends_on:
      - db

  db:
    container_name: db
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=whoKnows
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - WhoKnows-LAWNE
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user"]
      interval: 20s
      timeout: 10s
      retries: 1

# Ill get back to this later